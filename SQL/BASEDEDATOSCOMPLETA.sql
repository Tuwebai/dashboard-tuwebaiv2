-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.automation_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  automation_type character varying NOT NULL CHECK (automation_type::text = ANY (ARRAY['workflow'::character varying, 'trigger'::character varying, 'task'::character varying, 'pipeline'::character varying]::text[])),
  automation_id uuid NOT NULL,
  action character varying NOT NULL,
  status character varying NOT NULL CHECK (status::text = ANY (ARRAY['success'::character varying, 'error'::character varying, 'warning'::character varying, 'info'::character varying]::text[])),
  message text,
  details jsonb DEFAULT '{}'::jsonb,
  execution_time_ms integer,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT automation_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.automation_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['daily'::character varying, 'weekly'::character varying, 'monthly'::character varying, 'on_event'::character varying, 'custom'::character varying]::text[])),
  script text,
  script_type character varying DEFAULT 'sql'::character varying,
  parameters jsonb DEFAULT '{}'::jsonb,
  last_run timestamp with time zone,
  next_run timestamp with time zone,
  run_count integer DEFAULT 0,
  success_count integer DEFAULT 0,
  error_count integer DEFAULT 0,
  last_error text,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT automation_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT automation_tasks_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.chat_messages (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  chat_room_id uuid NOT NULL,
  text text NOT NULL,
  sender character varying NOT NULL,
  sender_name character varying NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  type character varying DEFAULT 'text'::character varying CHECK (type::text = ANY (ARRAY['text'::character varying, 'file'::character varying, 'system'::character varying]::text[])),
  project_id uuid,
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.chat_rooms (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  project_id uuid NOT NULL,
  participants ARRAY DEFAULT '{}'::character varying[],
  created_at timestamp with time zone DEFAULT now(),
  unread_count integer DEFAULT 0,
  project_name character varying NOT NULL,
  last_message text,
  last_message_time timestamp with time zone DEFAULT now(),
  CONSTRAINT chat_rooms_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ci_cd_pipelines (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  project_id uuid,
  repository_url character varying,
  branch character varying DEFAULT 'main'::character varying,
  stages jsonb DEFAULT '[]'::jsonb,
  triggers jsonb DEFAULT '[]'::jsonb,
  status character varying DEFAULT 'idle'::character varying CHECK (status::text = ANY (ARRAY['idle'::character varying, 'running'::character varying, 'success'::character varying, 'failed'::character varying, 'cancelled'::character varying]::text[])),
  current_stage character varying,
  started_at timestamp with time zone,
  completed_at timestamp with time zone,
  duration_seconds integer,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT ci_cd_pipelines_pkey PRIMARY KEY (id),
  CONSTRAINT ci_cd_pipelines_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT ci_cd_pipelines_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.comments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  text text NOT NULL,
  author character varying NOT NULL,
  author_name character varying NOT NULL,
  phase_key character varying,
  project_id uuid NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  CONSTRAINT comments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.commits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  commit_hash character varying NOT NULL,
  message text NOT NULL,
  author character varying NOT NULL,
  branch character varying DEFAULT 'main'::character varying,
  files_changed ARRAY DEFAULT '{}'::text[],
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT commits_pkey PRIMARY KEY (id),
  CONSTRAINT commits_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.environment_variables (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  key character varying NOT NULL,
  value text NOT NULL,
  is_sensitive boolean DEFAULT false,
  environment character varying NOT NULL DEFAULT 'production'::character varying,
  project_id uuid,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT environment_variables_pkey PRIMARY KEY (id),
  CONSTRAINT environment_variables_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT environment_variables_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.environments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  name character varying NOT NULL CHECK (name::text = ANY (ARRAY['development'::character varying, 'staging'::character varying, 'production'::character varying]::text[])),
  display_name character varying NOT NULL,
  description text,
  url character varying,
  is_active boolean DEFAULT true,
  auto_deploy boolean DEFAULT false,
  branch character varying NOT NULL,
  health_check_url character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT environments_pkey PRIMARY KEY (id),
  CONSTRAINT environments_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.export_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  data_type character varying NOT NULL CHECK (data_type::text = ANY (ARRAY['projects'::character varying, 'users'::character varying, 'payments'::character varying, 'tickets'::character varying, 'custom'::character varying]::text[])),
  format character varying NOT NULL CHECK (format::text = ANY (ARRAY['pdf'::character varying, 'excel'::character varying, 'csv'::character varying, 'json'::character varying]::text[])),
  filters jsonb DEFAULT '{}'::jsonb,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  download_url text,
  error text,
  file_size bigint,
  record_count integer,
  created_by uuid,
  CONSTRAINT export_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT export_jobs_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.notification_analytics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  date date NOT NULL,
  channel character varying NOT NULL,
  category character varying NOT NULL,
  sent_count integer DEFAULT 0,
  delivered_count integer DEFAULT 0,
  opened_count integer DEFAULT 0,
  clicked_count integer DEFAULT 0,
  failed_count integer DEFAULT 0,
  bounce_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_analytics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notification_channels (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL UNIQUE,
  display_name text NOT NULL DEFAULT ''::text,
  description text,
  type text NOT NULL DEFAULT 'general'::text,
  types ARRAY NOT NULL DEFAULT '{}'::text[],
  settings jsonb NOT NULL DEFAULT '{"badge": true, "sound": true, "priority": "normal", "vibration": true}'::jsonb,
  enabled boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_channels_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notification_delivery_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  notification_id uuid NOT NULL,
  user_id uuid NOT NULL,
  channel_id uuid NOT NULL,
  status character varying NOT NULL CHECK (status::text = ANY (ARRAY['pending'::character varying, 'sent'::character varying, 'delivered'::character varying, 'failed'::character varying, 'bounced'::character varying]::text[])),
  sent_at timestamp with time zone,
  delivered_at timestamp with time zone,
  error_message text,
  retry_count integer DEFAULT 0,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_delivery_logs_pkey PRIMARY KEY (id),
  CONSTRAINT notification_delivery_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT notification_delivery_logs_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES public.notifications(id)
);
CREATE TABLE public.notification_rules (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  description text,
  trigger_event character varying NOT NULL,
  conditions jsonb DEFAULT '{}'::jsonb,
  actions jsonb NOT NULL,
  is_active boolean DEFAULT true,
  priority integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_rules_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notification_settings (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  email_notifications boolean DEFAULT true,
  push_notifications boolean DEFAULT true,
  project_updates boolean DEFAULT true,
  ticket_updates boolean DEFAULT true,
  payment_updates boolean DEFAULT true,
  security_alerts boolean DEFAULT true,
  system_notifications boolean DEFAULT true,
  daily_summary boolean DEFAULT false,
  weekly_report boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_settings_pkey PRIMARY KEY (id),
  CONSTRAINT notification_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.notification_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  category character varying NOT NULL,
  channels ARRAY NOT NULL,
  subject text,
  content text NOT NULL,
  html_content text,
  variables jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notification_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  title character varying NOT NULL,
  message text NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['info'::character varying, 'success'::character varying, 'warning'::character varying, 'error'::character varying, 'critical'::character varying]::text[])),
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['system'::character varying, 'project'::character varying, 'ticket'::character varying, 'payment'::character varying, 'security'::character varying, 'user'::character varying]::text[])),
  is_read boolean DEFAULT false,
  is_urgent boolean DEFAULT false,
  action_url text,
  metadata jsonb DEFAULT '{}'::jsonb,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid,
  currency text DEFAULT 'USD'::text,
  status text DEFAULT 'pending'::text,
  payment_method text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  user_email text,
  user_name text,
  payment_type text DEFAULT 'custom'::text,
  mercadopago_id text UNIQUE,
  mercadopago_status text,
  installments integer DEFAULT 1,
  description text,
  features ARRAY DEFAULT '{}'::text[],
  paid_at timestamp with time zone,
  invoice_url text,
  metadata jsonb DEFAULT '{}'::jsonb,
  amount integer NOT NULL,
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.project_files (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  name text NOT NULL,
  url text NOT NULL,
  size bigint NOT NULL,
  type text NOT NULL,
  uploaded_by uuid NOT NULL,
  uploaded_by_name text NOT NULL,
  uploaded_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_files_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  text text NOT NULL,
  sender uuid NOT NULL,
  sender_name text NOT NULL,
  timestamp timestamp with time zone DEFAULT now(),
  type text DEFAULT 'text'::text,
  file_url text,
  file_name text,
  role text DEFAULT 'cliente'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_messages_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  status text DEFAULT 'pending'::text,
  priority text DEFAULT 'medium'::text,
  assignee uuid,
  assignee_name text,
  due_date date,
  phase_key text DEFAULT 'general'::text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_tasks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.project_versions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  project_id uuid,
  version character varying NOT NULL,
  description text NOT NULL,
  changes jsonb NOT NULL DEFAULT '[]'::jsonb,
  environment character varying NOT NULL CHECK (environment::text = ANY (ARRAY['development'::character varying, 'staging'::character varying, 'production'::character varying]::text[])),
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['draft'::character varying, 'in_review'::character varying, 'approved'::character varying, 'deployed'::character varying, 'failed'::character varying, 'rolled_back'::character varying, 'pending'::character varying, 'production'::character varying, 'staging'::character varying]::text[])),
  build_number integer NOT NULL DEFAULT 1,
  commit_hash character varying,
  branch character varying,
  build_logs text,
  deployment_logs text,
  rollback_to character varying,
  deployed_at timestamp with time zone,
  deployed_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_versions_pkey PRIMARY KEY (id),
  CONSTRAINT project_versions_deployed_by_fkey FOREIGN KEY (deployed_by) REFERENCES auth.users(id),
  CONSTRAINT project_versions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id)
);
CREATE TABLE public.project_workflows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  project_type character varying,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT project_workflows_pkey PRIMARY KEY (id),
  CONSTRAINT project_workflows_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.projects (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  technologies ARRAY,
  environment_variables jsonb,
  status character varying DEFAULT 'development'::character varying CHECK (status::text = ANY (ARRAY['development'::character varying, 'production'::character varying, 'paused'::character varying, 'maintenance'::character varying]::text[])),
  github_repository_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  is_active boolean DEFAULT true,
  customicon character varying DEFAULT 'FolderOpen'::character varying,
  CONSTRAINT projects_pkey PRIMARY KEY (id),
  CONSTRAINT projects_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.push_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  endpoint text NOT NULL,
  p256dh text NOT NULL,
  auth text NOT NULL,
  device_info jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT push_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT push_subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.report_executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  template_id uuid,
  status character varying NOT NULL DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'processing'::character varying, 'completed'::character varying, 'failed'::character varying]::text[])),
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  download_url text,
  error text,
  file_size bigint,
  record_count integer,
  created_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT report_executions_pkey PRIMARY KEY (id),
  CONSTRAINT report_executions_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.report_templates(id),
  CONSTRAINT report_executions_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.report_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['executive'::character varying, 'financial'::character varying, 'user'::character varying, 'project'::character varying, 'custom'::character varying]::text[])),
  filters jsonb DEFAULT '{}'::jsonb,
  schedule jsonb,
  last_generated timestamp with time zone,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT report_templates_pkey PRIMARY KEY (id),
  CONSTRAINT report_templates_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id),
  CONSTRAINT report_templates_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id)
);
CREATE TABLE public.scheduled_exports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  data_type character varying NOT NULL CHECK (data_type::text = ANY (ARRAY['projects'::character varying, 'users'::character varying, 'payments'::character varying, 'tickets'::character varying, 'custom'::character varying]::text[])),
  format character varying NOT NULL CHECK (format::text = ANY (ARRAY['pdf'::character varying, 'excel'::character varying, 'csv'::character varying, 'json'::character varying]::text[])),
  schedule jsonb NOT NULL,
  recipients ARRAY DEFAULT '{}'::text[],
  is_active boolean DEFAULT true,
  last_executed timestamp with time zone,
  next_execution timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT scheduled_exports_pkey PRIMARY KEY (id),
  CONSTRAINT scheduled_exports_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES public.users(id),
  CONSTRAINT scheduled_exports_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.scheduled_notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  template_id uuid,
  rule_id uuid,
  channels ARRAY NOT NULL,
  subject text,
  content text NOT NULL,
  html_content text,
  variables jsonb DEFAULT '{}'::jsonb,
  scheduled_for timestamp with time zone NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'sent'::character varying, 'failed'::character varying, 'cancelled'::character varying]::text[])),
  attempts integer DEFAULT 0,
  max_attempts integer DEFAULT 3,
  last_attempt_at timestamp with time zone,
  error_message text,
  sent_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT scheduled_notifications_pkey PRIMARY KEY (id),
  CONSTRAINT scheduled_notifications_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.notification_templates(id),
  CONSTRAINT scheduled_notifications_rule_id_fkey FOREIGN KEY (rule_id) REFERENCES public.notification_rules(id),
  CONSTRAINT scheduled_notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.scheduled_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  template_id character varying,
  schedule character varying NOT NULL,
  recipients jsonb DEFAULT '[]'::jsonb,
  format character varying DEFAULT 'pdf'::character varying CHECK (format::text = ANY (ARRAY['pdf'::character varying, 'excel'::character varying, 'html'::character varying, 'csv'::character varying]::text[])),
  parameters jsonb DEFAULT '{}'::jsonb,
  last_generated timestamp with time zone,
  next_generation timestamp with time zone,
  generation_count integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_by uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT scheduled_reports_pkey PRIMARY KEY (id),
  CONSTRAINT scheduled_reports_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.system_alerts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['info'::character varying, 'warning'::character varying, 'critical'::character varying]::text[])),
  message text NOT NULL,
  metric character varying,
  value numeric,
  threshold numeric,
  timestamp timestamp with time zone DEFAULT now(),
  acknowledged boolean DEFAULT false,
  acknowledged_by uuid,
  acknowledged_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT system_alerts_pkey PRIMARY KEY (id),
  CONSTRAINT system_alerts_acknowledged_by_fkey FOREIGN KEY (acknowledged_by) REFERENCES public.users(id)
);
CREATE TABLE public.tasks (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  title character varying NOT NULL,
  description text,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'in-progress'::character varying, 'completed'::character varying, 'cancelled'::character varying]::text[])),
  priority character varying DEFAULT 'medium'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'medium'::character varying, 'high'::character varying, 'urgent'::character varying]::text[])),
  assignee character varying NOT NULL,
  assignee_name character varying NOT NULL,
  due_date timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  project_id uuid NOT NULL,
  phase_key character varying,
  CONSTRAINT tasks_pkey PRIMARY KEY (id)
);
CREATE TABLE public.tickets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  asunto text NOT NULL,
  mensaje text NOT NULL,
  email text NOT NULL,
  fecha timestamp with time zone DEFAULT now(),
  estado text DEFAULT 'abierto'::text CHECK (estado = ANY (ARRAY['abierto'::text, 'respondido'::text, 'cerrado'::text])),
  prioridad text DEFAULT 'media'::text CHECK (prioridad = ANY (ARRAY['baja'::text, 'media'::text, 'alta'::text])),
  respuesta text,
  respondido_por text,
  fecha_respuesta timestamp with time zone,
  user_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT tickets_pkey PRIMARY KEY (id),
  CONSTRAINT tickets_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_channel_subscriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  channel_id uuid NOT NULL,
  is_enabled boolean DEFAULT true,
  preferences jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_channel_subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT user_channel_subscriptions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying NOT NULL,
  role_id uuid,
  invited_by uuid,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'accepted'::character varying, 'expired'::character varying, 'cancelled'::character varying, 'declined'::character varying]::text[])),
  token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  message text,
  accepted_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT user_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES public.users(id),
  CONSTRAINT user_invitations_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.user_roles(id)
);
CREATE TABLE public.user_preferences (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  preference_type text NOT NULL CHECK (preference_type = ANY (ARRAY['theme'::text, 'dashboard_widgets'::text, 'dashboard_layouts'::text, 'language'::text, 'welcome_back'::text, 'auth_state'::text])),
  preference_key text NOT NULL,
  preference_value jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_preferences_pkey PRIMARY KEY (id),
  CONSTRAINT user_preferences_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_roles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  display_name character varying NOT NULL,
  description text,
  permissions ARRAY DEFAULT '{}'::text[],
  is_system boolean DEFAULT false,
  can_delete boolean DEFAULT true,
  can_edit boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_roles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  email text NOT NULL UNIQUE,
  full_name text,
  role text DEFAULT 'user'::text CHECK (role = ANY (ARRAY['admin'::text, 'user'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  avatar_url text,
  language text DEFAULT 'es'::text,
  timezone text DEFAULT 'America/Argentina/Buenos_Aires'::text,
  date_format text DEFAULT 'DD/MM/YYYY'::text,
  time_format text DEFAULT '24h'::text,
  profile_visibility text DEFAULT 'public'::text,
  show_email boolean DEFAULT false,
  show_phone boolean DEFAULT false,
  allow_analytics boolean DEFAULT true,
  allow_cookies boolean DEFAULT true,
  two_factor_auth boolean DEFAULT false,
  push_notifications boolean DEFAULT true,
  email_notifications boolean DEFAULT true,
  sms_notifications boolean DEFAULT false,
  sound_enabled boolean DEFAULT true,
  vibration_enabled boolean DEFAULT true,
  quiet_hours boolean DEFAULT false,
  quiet_hours_start text DEFAULT '22:00'::text,
  quiet_hours_end text DEFAULT '08:00'::text,
  project_updates boolean DEFAULT true,
  payment_reminders boolean DEFAULT true,
  support_updates boolean DEFAULT true,
  marketing_emails boolean DEFAULT false,
  auto_save boolean DEFAULT true,
  auto_save_interval integer DEFAULT 30,
  cache_enabled boolean DEFAULT true,
  image_quality text DEFAULT 'high'::text,
  animations_enabled boolean DEFAULT true,
  low_bandwidth_mode boolean DEFAULT false,
  session_timeout integer DEFAULT 30,
  max_login_attempts integer DEFAULT 5,
  require_password_change boolean DEFAULT false,
  password_expiry_days integer DEFAULT 90,
  login_notifications boolean DEFAULT true,
  device_management boolean DEFAULT true,
  phone text,
  company text,
  position text,
  bio text,
  location text,
  website text,
  last_login timestamp with time zone,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.version_comments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  version_id uuid NOT NULL,
  user_email text NOT NULL,
  comment text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT version_comments_pkey PRIMARY KEY (id)
);
CREATE TABLE public.workflow_executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid,
  project_id uuid,
  status character varying DEFAULT 'running'::character varying CHECK (status::text = ANY (ARRAY['running'::character varying, 'completed'::character varying, 'failed'::character varying, 'cancelled'::character varying]::text[])),
  current_step_id uuid,
  step_results jsonb DEFAULT '[]'::jsonb,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  duration_seconds integer,
  error_message text,
  created_by uuid,
  CONSTRAINT workflow_executions_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_executions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT workflow_executions_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.project_workflows(id),
  CONSTRAINT workflow_executions_project_id_fkey FOREIGN KEY (project_id) REFERENCES public.projects(id),
  CONSTRAINT workflow_executions_current_step_id_fkey FOREIGN KEY (current_step_id) REFERENCES public.workflow_steps(id)
);
CREATE TABLE public.workflow_steps (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid,
  name character varying NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['approval'::character varying, 'notification'::character varying, 'status_change'::character varying, 'email'::character varying, 'assignment'::character varying, 'condition'::character varying]::text[])),
  order_index integer NOT NULL,
  conditions jsonb DEFAULT '{}'::jsonb,
  actions jsonb DEFAULT '{}'::jsonb,
  timeout_seconds integer DEFAULT 3600,
  retry_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_steps_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_steps_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.project_workflows(id)
);

