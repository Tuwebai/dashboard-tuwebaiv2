#!/usr/bin/env node

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üßπ Limpiando cache y reconstruyendo aplicaci√≥n...\n');

try {
  // Limpiar cache de Vite
  console.log('1. Limpiando cache de Vite...');
  if (fs.existsSync('node_modules/.vite')) {
    fs.rmSync('node_modules/.vite', { recursive: true, force: true });
    console.log('   ‚úÖ Cache de Vite limpiado');
  }

  // Limpiar dist
  console.log('2. Limpiando directorio dist...');
  if (fs.existsSync('dist')) {
    fs.rmSync('dist', { recursive: true, force: true });
    console.log('   ‚úÖ Directorio dist limpiado');
  }

  // Limpiar cache de npm
  console.log('3. Limpiando cache de npm...');
  execSync('npm cache clean --force', { stdio: 'inherit' });
  console.log('   ‚úÖ Cache de npm limpiado');

  // Reinstalar dependencias
  console.log('4. Reinstalando dependencias...');
  execSync('npm install', { stdio: 'inherit' });
  console.log('   ‚úÖ Dependencias reinstaladas');

  // Reconstruir aplicaci√≥n
  console.log('5. Reconstruyendo aplicaci√≥n...');
  execSync('npm run build', { stdio: 'inherit' });
  console.log('   ‚úÖ Aplicaci√≥n reconstruida');

  console.log('\nüéâ Limpieza y reconstrucci√≥n completada exitosamente!');
  console.log('   Los errores de useState y Service Worker deber√≠an estar resueltos.');

} catch (error) {
  console.error('‚ùå Error durante la limpieza y reconstrucci√≥n:', error.message);
  process.exit(1);
}
